apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  labels:
    app: n8n
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: n8n
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          env:
            - name: N8N_PORT
              value: "{{ .Values.service.targetPort }}"
            - name: N8N_PROTOCOL
              value: "{{ .Values.n8n.protocol | default "http" }}"
            - name: N8N_HOST
              value: "{{ .Values.n8n.host | default "0.0.0.0" }}"
            - name: N8N_SECURE_COOKIE
              value: "false"
            - name: DB_TYPE
              value: "sqlite"
            - name: DB_SQLITE_DATABASE
              value: "/home/node/.n8n/database.sqlite"
            - name: GENERIC_TIMEZONE
              value: "{{ .Values.n8n.timezone | default "UTC" }}"
            - name: TZ
              value: "{{ .Values.n8n.timezone | default "UTC" }}"
          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n
          resources: {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: n8n-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
          {{- else }}
          emptyDir: {}
          {{- end }}
